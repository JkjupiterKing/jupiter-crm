// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

enum InventoryItemType {
  PRODUCT
  SPARE_PART
}

enum InventoryTransactionKind {
  ADJUSTMENT
  PURCHASE
  SALE
  SERVICE_USE
  RETURN
}

enum SaleItemType {
  PRODUCT
  SPARE_PART
}

enum ServiceDueStatus {
  DUE
  OVERDUE
}

enum ServiceVisitStatus {
  UNSCHEDULED
  PLANNED
  COMPLETED
  CANCELLED
}

enum JobType {
  INSTALLATION
  REPAIR
  SERVICE
}

enum WarrantyStatus {
  IN_WARRANTY
  IN_CONTRACT
  OUT_OF_WARRANTY
}

enum NotificationChannel {
  SMS
  WHATSAPP
}

enum NotificationStatus {
  QUEUED
  SENT
  FAILED
}

enum ContractType {
  WARRANTY
  AMC
}

enum SaleStatus {
  PAID
  PENDING
  CANCELLED
}

enum ServiceFrequency {
  NONE
  QUARTERLY
  HALF_YEARLY
  YEARLY
}

model Product {
  id               Int                  @id @default(autoincrement())
  name             String
  category         String?
  sku              String               @unique
  description      String?
  // Standardized inventory fields
  currentStock     Int                  @default(0)
  reorderLevel     Int                  @default(5)
  unitPrice        Int?             
  costPrice        Int?
  manufacturer     String?
  model            String?
  warrantyPeriod   Int                  @default(12)
  service_frequency ServiceFrequency    @default(NONE)
  // Product status
  isActive         Boolean              @default(true)
  createdAt        DateTime             @default(now())
  updatedAt        DateTime             @updatedAt

  spareParts       SparePart[]
  customerProducts CustomerProduct[]
  saleItems        SaleItem[]
  serviceItems     ServiceItem[]
  inventoryTxns    InventoryTransaction[]

  @@index([name])
  @@index([sku])
  @@index([category])
  @@index([manufacturer])
}

model SparePart {
  id            Int                   @id @default(autoincrement())
  name          String
  sku           String                @unique
  description   String?
  price         Int?              
  isActive      Boolean               @default(true)
  stockQuantity Int                   @default(0)
  createdAt     DateTime              @default(now())
  updatedAt     DateTime              @updatedAt

  product       Product?              @relation(fields: [productId], references: [id])
  productId     Int?

  saleItems     SaleItem[]
  serviceItems  ServiceItem[]
  inventoryTxns InventoryTransaction[]

  @@index([name])
  @@index([sku])
  @@index([productId])
}

model Customer {
  id            Int            @id @default(autoincrement())
  fullName      String
  email         String?
  mobile        String
  altMobile     String?
  companyName   String?
  // Standardized address fields
  address       String?
  street        String?
  city          String?
  state         String?
  pincode       String?
  // Customer status and metadata
  isVIP         Boolean        @default(false)
  isActive      Boolean        @default(true)
  notes         String?
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt

  products      CustomerProduct[]
  sales         Sale[]
  serviceJobs   ServiceJob[]
  notifications Notification[]
  contracts     Contract[]

  @@index([fullName])
  @@index([email])
  @@index([mobile])
  @@index([companyName])
  @@index([city])
  @@index([state])
  @@index([pincode])
}

model Engineer {
  id             Int          @id @default(autoincrement())
  name           String
  email          String?
  phone          String?
  mobile         String?
  specialization String?
  isActive       Boolean      @default(true)
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt

  serviceJobs    ServiceJob[]

  @@index([name])
  @@index([email])
  @@index([specialization])
}

model CustomerProduct {
  id                Int             @id @default(autoincrement())
  customer          Customer        @relation(fields: [customerId], references: [id])
  customerId        Int

  product           Product         @relation(fields: [productId], references: [id])
  productId         Int

  serialNumber      String?
  purchaseDate      DateTime
  warrantyExpiry    DateTime?
  lastServiceDate   DateTime?
  createdAt         DateTime        @default(now())
  updatedAt         DateTime        @updatedAt

  contracts         ServiceContract[]
  serviceJobs       ServiceJob[]

  @@index([customerId])
  @@index([productId])
  @@index([warrantyExpiry])
}

model Sale {
  id            Int       @id @default(autoincrement())
  customer      Customer  @relation(fields: [customerId], references: [id])
  customerId    Int
  invoiceNumber String    @unique
  saleDate      DateTime  @default(now())
  totalAmount   Int   
  paymentMode   String?
  status        SaleStatus @default(PAID)
  notes         String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  items         SaleItem[]
  serviceJobs   ServiceJob[]

  @@index([customerId])
  @@index([saleDate])
  @@index([status])
}

model SaleItem {
  id           Int           @id @default(autoincrement())
  sale         Sale          @relation(fields: [saleId], references: [id])
  saleId       Int

  itemType     SaleItemType
  product      Product?      @relation(fields: [productId], references: [id])
  productId    Int?
  sparePart    SparePart?    @relation(fields: [sparePartId], references: [id])
  sparePartId  Int?

  quantity     Int
  unitPrice    Int       
  lineTotal    Int
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt

  @@index([saleId])
  @@index([productId])
  @@index([sparePartId])
}

model ServiceJob {
  id                 Int               @id @default(autoincrement())
  customer           Customer          @relation(fields: [customerId], references: [id])
  customerId         Int

  customerProduct    CustomerProduct?  @relation(fields: [customerProductId], references: [id])
  customerProductId  Int?

  saleId             Int?
  sale               Sale?             @relation(fields: [saleId], references: [id])

  visitScheduledDate DateTime?
  serviceDueDate     DateTime
  serviceDueStatus   ServiceDueStatus  @default(DUE)
  serviceVisitStatus ServiceVisitStatus @default(UNSCHEDULED)
  jobType            JobType           @default(SERVICE)
  warrantyStatus     WarrantyStatus

  engineer           Engineer?         @relation(fields: [engineerId], references: [id])
  engineerId         Int?

  problemDescription String?
  resolutionNotes    String?
  billedAmount       Int?          
  notes              String?

  createdAt          DateTime          @default(now())
  updatedAt          DateTime          @updatedAt

  items              ServiceItem[]
  notifications      Notification[]

  @@index([customerId])
  @@index([customerProductId])
  @@index([engineerId])
  @@index([visitScheduledDate])
  @@index([serviceDueDate])
  @@index([serviceDueStatus])
  @@index([serviceVisitStatus])
}

model ServiceItem {
  id                 Int         @id @default(autoincrement())
  serviceJob         ServiceJob  @relation(fields: [serviceJobId], references: [id])
  serviceJobId       Int

  product            Product?    @relation(fields: [productId], references: [id])
  productId          Int?
  sparePart          SparePart?  @relation(fields: [sparePartId], references: [id])
  sparePartId        Int?

  quantity           Int
  unitPrice          Int     
  coveredByWarranty  Boolean     @default(false)

  @@index([serviceJobId])
  @@index([productId])
  @@index([sparePartId])
}

model ServiceContract {
  id                Int             @id @default(autoincrement())
  customerProduct   CustomerProduct @relation(fields: [customerProductId], references: [id])
  customerProductId Int

  contractType      ContractType
  startDate         DateTime
  endDate           DateTime
  frequencyMonths   Int?
  nextDueDate       DateTime?
  isActive          Boolean         @default(true)
  createdAt         DateTime        @default(now())
  updatedAt         DateTime        @updatedAt

  @@index([customerProductId])
  @@index([endDate])
  @@index([nextDueDate])
}

model Contract {
  id                Int             @id @default(autoincrement())
  customer          Customer        @relation(fields: [customerId], references: [id])
  customerId        Int

  contractType      ContractType
  startDate         DateTime
  endDate           DateTime
  terms             String?
  isActive          Boolean         @default(true)
  createdAt         DateTime        @default(now())
  updatedAt         DateTime        @updatedAt

  @@index([customerId])
  @@index([startDate])
  @@index([endDate])
  @@index([contractType])
}

model InventoryTransaction {
  id                Int                      @id @default(autoincrement())
  itemType          InventoryItemType
  product           Product?                 @relation(fields: [productId], references: [id])
  productId         Int?
  sparePart         SparePart?               @relation(fields: [sparePartId], references: [id])
  sparePartId       Int?
  quantity          Int
  transactionKind   InventoryTransactionKind
  notes             String?
  unitPrice         Int?
  totalAmount       Int?
  transactionDate   DateTime                 @default(now())
  createdAt         DateTime                 @default(now())
  updatedAt         DateTime                 @default(now())

  @@index([productId])
  @@index([sparePartId])
  @@index([createdAt])
  @@index([transactionDate])
}

model Notification {
  id           Int                  @id @default(autoincrement())
  customer     Customer             @relation(fields: [customerId], references: [id])
  customerId   Int
  serviceJob   ServiceJob?          @relation(fields: [serviceJobId], references: [id])
  serviceJobId Int?
  channel      NotificationChannel
  message      String
  status       NotificationStatus   @default(QUEUED)
  sentAt       DateTime?
  scheduledAt  DateTime?
  createdAt    DateTime             @default(now())
  updatedAt    DateTime             @default(now())

  @@index([customerId])
  @@index([serviceJobId])
  @@index([status])
  @@index([scheduledAt])
}
